@using PagedList;
@using PagedList.Mvc;

@model IPagedList<MVC.Models.Cars>

@{
    ViewBag.Title = "Index";
}
<div style="font-family:Arial">
    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <p>
        @using (Html.BeginForm("Index", "Home", FormMethod.Get))
        {
            <b>Search By:</b>
            @Html.RadioButton("searchBy", "Name", true) <text>Name</text>
            @Html.RadioButton("searchBy", "Model") <text>Model</text> 
            <br />
    @Html.TextBox("search") <input type="submit" value="Search" />
}
    </p>
    <table class="table" border="1">
        <tr>
            <th>
                @Html.ActionLink("Name", "Index", new { sortBy = ViewBag.SortNameParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
            </th>
            <th>
                @Html.ActionLink("Model", "Index", new { sortBy = ViewBag.SortModelParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Abrv)
            </th>
            <th>Action</th>
        </tr>

        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="4">No matching results</td>
            </tr>
        }
        else
        {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Abrv)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ID })
                </td>
            </tr>
        }
        }
    </table>
    @Html.PagedListPager(Model, page => Url.Action("Index", new {page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"], sortBy = Request["sortBy"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true})
</div>